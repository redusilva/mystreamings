generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model estado {
  id                           Int      @id @default(autoincrement())
  nome                         String   @db.VarChar(45)
  gastos_gastos_estadoToestado gastos[] @relation("gastos_estadoToestado")
}

model gastos {
  id                           Int              @id @default(autoincrement())
  nome                         String?          @db.VarChar(45)
  valor                        Float?           @db.Float
  mes                          Int?             @db.TinyInt
  ano                          Int?
  estado                       Int
  estado_gastos_estadoToestado estado           @relation("gastos_estadoToestado", fields: [estado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gastos_estado1")
  usuariosgastos               usuariosgastos[]

  @@index([estado], map: "fk_gastos_estado1")
}

model gastosrecorrentes {
  id                        Int                         @id @default(autoincrement())
  nome                      String                      @db.VarChar(45)
  valor                     Float                       @db.Float
  usuariosgastosrecorrentes usuariosgastosrecorrentes[]
}

model usuarios {
  id                        Int                         @id @default(autoincrement())
  nome                      String?                     @db.VarChar(45)
  email                     String                      @unique(map: "email_UNIQUE") @db.VarChar(45)
  senha                     String                      @db.VarChar(45)
  usuariosgastos            usuariosgastos[]
  usuariosgastosrecorrentes usuariosgastosrecorrentes[]
}

model usuariosgastos {
  usuarios_id Int
  gastos_id   Int
  gastos      gastos   @relation(fields: [gastos_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuarios_has_gastos_gastos1")
  usuarios    usuarios @relation(fields: [usuarios_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usuarios_has_gastos_usuarios1")

  @@id([usuarios_id, gastos_id])
  @@index([gastos_id], map: "fk_usuarios_has_gastos_gastos1")
}

model usuariosgastosrecorrentes {
  idGastosRecorrentes Int
  idUsuarios          Int
  gastosrecorrentes   gastosrecorrentes @relation(fields: [idGastosRecorrentes], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gastosRecorrentes_has_usuarios_gastosRecorrentes1")
  usuarios            usuarios          @relation(fields: [idUsuarios], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gastosRecorrentes_has_usuarios_usuarios1")

  @@id([idGastosRecorrentes, idUsuarios])
  @@index([idUsuarios], map: "fk_gastosRecorrentes_has_usuarios_usuarios1")
}
